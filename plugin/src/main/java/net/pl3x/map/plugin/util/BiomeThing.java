package net.pl3x.map.plugin.util;

import com.google.common.hash.Hashing;
import net.minecraft.server.v1_16_R3.BiomeBase;
import net.minecraft.server.v1_16_R3.BiomeManager;
import net.minecraft.server.v1_16_R3.GenLayerZoomVoronoi;
import net.minecraft.server.v1_16_R3.IRegistry;
import net.minecraft.server.v1_16_R3.MathHelper;
import net.minecraft.server.v1_16_R3.WorldServer;
import org.bukkit.block.Biome;
import org.bukkit.craftbukkit.v1_16_R3.block.CraftBlock;

public class BiomeThing implements BiomeManager.Provider {
    private static final int e = (int) Math.round(Math.log(16.0D) / Math.log(2.0D)) - 2;
    private static final int f = (int) Math.round(Math.log(256.0D) / Math.log(2.0D)) - 2;
    public static final int a = 1 << e + e + f;
    public static final int b = (1 << e) - 1;
    public static final int c = (1 << f) - 1;

    private final WorldServer world;
    private final IRegistry<BiomeBase> registry;
    private final BiomeBase[] biomes = new BiomeBase[1024];

    public BiomeThing(WorldServer world, int[] ids) {
        this.world = world;
        this.registry = world.r().b(IRegistry.ay);
        for (int i = 0; i < ids.length; ++i) {
            biomes[i] = registry.fromId(ids[i]);
            if (biomes[i] == null) {
                biomes[i] = registry.fromId(ids[i]); // void
            }
        }
    }

    public Biome toBiome(BiomeBase biome) {
        return CraftBlock.biomeBaseToBiome(registry, biome);
    }

    public BiomeBase get(int x, int y, int z) {
        //noinspection UnstableApiUsage
        long seed = Hashing.sha256().hashLong(world.getSeed()).asLong();
        return GenLayerZoomVoronoi.INSTANCE.a(seed, x, y, z, this);
    }

    @Override
    public BiomeBase getBiome(int x, int y, int z) {
        int i = x & b;
        int j = MathHelper.clamp(y, 0, c);
        int k = z & b;
        return biomes[j << e + e | k << e | i];
    }

    // this is just some sample biome data read from region file nbt (1024 ints)
    int[] ids = new int[]{2, 37, 37, 37, 2, 37, 37, 37, 2, 37, 37, 37, 37, 37, 37, 37, 2, 37, 37, 37, 2, 37, 37, 37, 2,
            37, 37, 37, 37, 37, 37, 37, 2, 37, 37, 37, 2, 37, 37, 37, 2, 37, 37, 37, 37, 37, 37, 37, 2, 37, 37, 37, 2,
            37, 37, 37, 2, 37, 37, 37, 37, 37, 37, 37, 2, 37, 37, 37, 2, 37, 37, 37, 2, 37, 37, 37, 37, 37, 37, 37, 2,
            37, 37, 37, 2, 37, 37, 37, 2, 37, 37, 37, 37, 37, 37, 37, 2, 37, 37, 37, 2, 37, 37, 37, 2, 37, 37, 37, 37,
            37, 37, 37, 2, 37, 37, 37, 2, 37, 37, 37, 2, 37, 37, 37, 37, 37, 37, 37, 2, 37, 37, 37, 2, 37, 37, 37, 2,
            37, 37, 37, 37, 37, 37, 37, 2, 37, 37, 37, 2, 37, 37, 37, 2, 37, 37, 37, 37, 37, 37, 37, 2, 37, 37, 37, 2,
            37, 37, 37, 2, 37, 37, 37, 37, 37, 37, 37, 2, 37, 37, 37, 2, 37, 37, 37, 2, 37, 37, 37, 37, 37, 37, 37, 2,
            37, 37, 37, 2, 37, 37, 37, 2, 37, 37, 37, 37, 37, 37, 37, 2, 37, 37, 37, 2, 37, 37, 37, 2, 37, 37, 37, 37,
            37, 37, 37, 2, 37, 37, 37, 2, 37, 37, 37, 2, 37, 37, 37, 37, 37, 37, 37, 2, 37, 37, 37, 2, 37, 37, 37, 2,
            37, 37, 37, 37, 37, 37, 37, 2, 37, 37, 37, 2, 37, 37, 37, 2, 37, 37, 37, 37, 37, 37, 37, 2, 37, 37, 37, 2,
            37, 37, 37, 2, 37, 37, 37, 37, 37, 37, 37, 2, 37, 37, 37, 2, 37, 37, 37, 2, 37, 37, 37, 37, 37, 37, 37, 2,
            37, 37, 37, 2, 37, 37, 37, 2, 37, 37, 37, 37, 37, 37, 37, 2, 37, 37, 37, 2, 37, 37, 37, 2, 37, 37, 37, 37,
            37, 37, 37, 2, 37, 37, 37, 2, 37, 37, 37, 2, 37, 37, 37, 37, 37, 37, 37, 2, 37, 37, 37, 2, 37, 37, 37, 2,
            37, 37, 37, 37, 37, 37, 37, 2, 37, 37, 37, 2, 37, 37, 37, 2, 37, 37, 37, 37, 37, 37, 37, 2, 37, 37, 37, 2,
            37, 37, 37, 2, 37, 37, 37, 37, 37, 37, 37, 2, 37, 37, 37, 2, 37, 37, 37, 2, 37, 37, 37, 37, 37, 37, 37, 2,
            37, 37, 37, 2, 37, 37, 37, 2, 37, 37, 37, 37, 37, 37, 37, 2, 37, 37, 37, 2, 37, 37, 37, 2, 37, 37, 37, 37,
            37, 37, 37, 2, 37, 37, 37, 2, 37, 37, 37, 2, 37, 37, 37, 37, 37, 37, 37, 2, 37, 37, 37, 2, 37, 37, 37, 2,
            37, 37, 37, 37, 37, 37, 37, 2, 37, 37, 37, 2, 37, 37, 37, 2, 37, 37, 37, 37, 37, 37, 37, 2, 37, 37, 37, 2,
            37, 37, 37, 2, 37, 37, 37, 37, 37, 37, 37, 2, 37, 37, 37, 2, 37, 37, 37, 2, 37, 37, 37, 37, 37, 37, 37, 2,
            37, 37, 37, 2, 37, 37, 37, 2, 37, 37, 37, 37, 37, 37, 37, 2, 37, 37, 37, 2, 37, 37, 37, 2, 37, 37, 37, 37,
            37, 37, 37, 2, 37, 37, 37, 2, 37, 37, 37, 2, 37, 37, 37, 37, 37, 37, 37, 2, 37, 37, 37, 2, 37, 37, 37, 2,
            37, 37, 37, 37, 37, 37, 37, 2, 37, 37, 37, 2, 37, 37, 37, 2, 37, 37, 37, 37, 37, 37, 37, 2, 37, 37, 37, 2,
            37, 37, 37, 2, 37, 37, 37, 37, 37, 37, 37, 2, 37, 37, 37, 2, 37, 37, 37, 2, 37, 37, 37, 37, 37, 37, 37, 2,
            37, 37, 37, 2, 37, 37, 37, 2, 37, 37, 37, 37, 37, 37, 37, 2, 37, 37, 37, 2, 37, 37, 37, 2, 37, 37, 37, 37,
            37, 37, 37, 2, 37, 37, 37, 2, 37, 37, 37, 2, 37, 37, 37, 37, 37, 37, 37, 2, 37, 37, 37, 2, 37, 37, 37, 2,
            37, 37, 37, 37, 37, 37, 37, 2, 37, 37, 37, 2, 37, 37, 37, 2, 37, 37, 37, 37, 37, 37, 37, 2, 37, 37, 37, 2,
            37, 37, 37, 2, 37, 37, 37, 37, 37, 37, 37, 2, 37, 37, 37, 2, 37, 37, 37, 2, 37, 37, 37, 37, 37, 37, 37, 2,
            37, 37, 37, 2, 37, 37, 37, 2, 37, 37, 37, 37, 37, 37, 37, 2, 37, 37, 37, 2, 37, 37, 37, 2, 37, 37, 37, 37,
            37, 37, 37, 2, 37, 37, 37, 2, 37, 37, 37, 2, 37, 37, 37, 37, 37, 37, 37, 2, 37, 37, 37, 2, 37, 37, 37, 2,
            37, 37, 37, 37, 37, 37, 37, 2, 37, 37, 37, 2, 37, 37, 37, 2, 37, 37, 37, 37, 37, 37, 37, 2, 37, 37, 37, 2,
            37, 37, 37, 2, 37, 37, 37, 37, 37, 37, 37, 2, 37, 37, 37, 2, 37, 37, 37, 2, 37, 37, 37, 37, 37, 37, 37, 2,
            37, 37, 37, 2, 37, 37, 37, 2, 37, 37, 37, 37, 37, 37, 37, 2, 37, 37, 37, 2, 37, 37, 37, 2, 37, 37, 37, 37,
            37, 37, 37, 2, 37, 37, 37, 2, 37, 37, 37, 2, 37, 37, 37, 37, 37, 37, 37, 2, 37, 37, 37, 2, 37, 37, 37, 2,
            37, 37, 37, 37, 37, 37, 37, 2, 37, 37, 37, 2, 37, 37, 37, 2, 37, 37, 37, 37, 37, 37, 37, 2, 37, 37, 37, 2,
            37, 37, 37, 2, 37, 37, 37, 37, 37, 37, 37, 2, 37, 37, 37, 2, 37, 37, 37, 2, 37, 37, 37, 37, 37, 37, 37, 2,
            37, 37, 37, 2, 37, 37, 37, 2, 37, 37, 37, 37, 37, 37, 37, 2, 37, 37, 37, 2, 37, 37, 37, 2, 37, 37, 37, 37,
            37, 37, 37, 2, 37, 37, 37, 2, 37, 37, 37, 2, 37, 37, 37, 37, 37, 37, 37};
}
